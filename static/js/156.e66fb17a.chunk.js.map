{"version":3,"file":"static/js/156.e66fb17a.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","pages/PageContacts/PageContacts.jsx"],"sourcesContent":["export const getFilterContact = state => state.contacts.filter;\n\nexport const getFilteredContacts = state => {\n    return state.contacts.contacts.filter(contacts =>\n        contacts.name.toLowerCase().includes(state.contacts.filter)\n    );\n\n};\n\nexport const getAllContacts = state => state.contacts.contacts;\n\n\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\npadding: 0 20px;\nborder: 2px solid gray;\nborder-radius: 10px;\nbackground-color: beige;\n`;\n\nexport const Label = styled.label`\nmargin-top:10px;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.25;\n`;\n\nexport const Input = styled.input`\n    margin-top:10px;\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 1.25;\n  border-radius: 5px;\n  height: 30px;\n`;\n\nexport const Button = styled.button`\nmargin: 15px auto ;\n    padding:10px;\n    width: 150px;\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 1.25;\n  background-color: skyblue;\n  border:none;\n  border-radius: 10px;\n  cursor: pointer;\n  &:hover {\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n  }\n`;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { addContact } from 'redux/contacts/contactsThunk';\nimport { getAllContacts } from 'redux/contacts/contactsSelectors';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getAllContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default: return;\n    }\n  };\n\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    const isNameinContacts = contacts.find(newContact => newContact.name.toLowerCase() === name.toLowerCase());\n    isNameinContacts ? toast.success(`${newContact.name} is alredy in contacts`) : dispatch(addContact(newContact));\n    reset();\n  };\n    const reset = () => {\n      setName('');\n      setNumber('');\n    };\n \n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete='off'>\n      <Label htmlFor=\"contact_name\">Name</Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n      />\n      <Label htmlFor=\"contact_number\">Number</Label>\n      <Input\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n      />\n      <Button type=\"submit\"> Add contact</Button>\n      <ToastContainer />\n    </Form>\n  );\n}\n\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n   display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n    padding: 10px 20px;\n    /* &:not(:last-child) {\n        margin-bottom: 30px;\n    } */\n   \n`;\n\nexport const ContactNumber = styled.a`\n  width: 50%;\n    text-decoration: none;\n    font-size: 16px;\n    color: #000;\n    &:hover {\n    color: grey;\n    text-decoration: underline;\n  }\n    \n`\n\n\nexport const Button = styled.button`\n \n    padding:10px;\n    width: 100px;\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 1.25;\n  background-color: skyblue;\n  border:none;\n  border-radius: 10px;\n  cursor: pointer;\n  &:hover {\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n  }\n  \n`;","import { Item, Button, ContactNumber} from './ContactItem.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contactsThunk';\n\nexport const ContactItem = ({ id, name, number }) => {\n    \n    const dispatch = useDispatch();\n    const onDeleteContact = (id) => {\n        dispatch(deleteContact(id));\n    };\n\n    return (\n        <Item key={id}>\n            <p>\n                {name}:\n            </p>\n           <ContactNumber href={'tel:' + number}>\n          {number}\n        </ContactNumber>\n          \n            <Button type=\"button\" onClick={() => onDeleteContact(id)}>\n                Delete\n            </Button>\n        </Item>\n    );\n};\n\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n   onDeleteContact: PropTypes.func,\n};","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  /* display: flex;\n  flex-direction: column;\n  padding: 0 15px;\n  width: 360px; */\n\n   margin: 0 auto;\n  border: 2px solid gray;\n  border-radius: 6px;\n  overflow: hidden;\n`;","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts  } from 'redux/contacts/contactsSelectors'; \nimport { getContacts } from 'redux/contacts/contactsThunk';\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getFilteredContacts );\n    useEffect(() => {\n        dispatch(getContacts());\n    }, [dispatch])\n    return (\n       \n        <List>\n            {contacts.map(({ id, name, number}) => (\n                <ContactItem\n                    key={id}\n                    id={id}\n                    name={name}\n                    number={number}\n                />\n            ))}\n        </List>\n    );\n};\n\n","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n   display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 0 auto 0;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.25;\n`;\n\nexport const Input = styled.input`\n   margin:20px;\n    width: 250px;\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 1.25;\n  border-radius: 5px;\n  height: 25px;\n`;","import { Label, Input } from './Filter.styled';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/contactsSlice';\nimport { getFilterContact } from 'redux/contacts/contactsSelectors';\n\n\nexport const Filter = () => {\n      const filter = useSelector(getFilterContact);\n    const dispatch = useDispatch();\n\n    const onChangeFilter = (filter) => { \n        dispatch(filterContacts(filter));\n    }\n    return (\n        <Label>\n            Find contacts by name\n            <Input \n                type=\"text\"\n                name=\"filter\"\n                value={filter}\n                onChange={(e) => onChangeFilter(e.target.value)}\n                placeholder=\"Enter search name\" />\n        </Label>\n    );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    padding: 20px;\n    margin: 0 auto;\n    `;\n\nexport const Title = styled.h2`\n      margin-bottom: 20px;\n    text-align: center;\n    font-size: 24px;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      {children}\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n\nexport default Section;\n","import { ContactForm } from 'components/ContactForm/ContactForm'; \nimport { ContactList } from 'components/ContactList/ContactList'; \nimport { Filter } from 'components/Filter/Filter'; \nimport Section from 'components/Section/Section';\n\nconst PageContacts = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default PageContacts;"],"names":["getFilterContact","state","contacts","filter","getFilteredContacts","name","toLowerCase","includes","getAllContacts","Form","styled","Label","Input","Button","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","reset","onSubmit","preventDefault","newContact","isNameinContacts","find","toast","addContact","autoComplete","htmlFor","type","pattern","title","required","onChange","Item","ContactNumber","ContactItem","id","href","onClick","deleteContact","onDeleteContact","List","ContactList","useEffect","getContacts","map","Filter","filterContacts","onChangeFilter","placeholder","Container","Title","children"],"sourceRoot":""}