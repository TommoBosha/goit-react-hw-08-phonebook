{"version":3,"file":"static/js/643.a2fbfea7.chunk.js","mappings":"4LAEaA,E,QAAeC,GAAAA,OAAH,mZ,SCazB,EAZe,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,MAAoC,IAA7BC,KAAAA,OAA6B,MAAxB,SAAwB,EAAdC,EAAc,EAAdA,QAAgB,OACrD,SAACJ,EAAD,CAAcK,UAAU,MAAMF,KAAMA,EAAMC,QAASA,EAAnD,SACGF,GAEF,C,yLCLUI,EAAOL,EAAAA,GAAAA,KAAH,oGAOJM,EAAQN,EAAAA,GAAAA,MAAH,mEAKLO,EAAYP,EAAAA,GAAAA,MAAH,6EAKTQ,EAAaR,EAAAA,GAAAA,KAAH,6FAMVS,EAAQT,EAAAA,GAAAA,MAAH,+J,yHCYlB,EA/BkB,WACjB,IAAMU,GAAWC,EAAAA,EAAAA,MAcjB,OACG,UAAC,KAAD,CAAMC,SAbY,SAAAC,GACpBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACjBN,GACIO,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGvCL,EAAKO,OACL,EAGgCC,aAAa,MAA3C,WACE,SAAC,KAAD,6BACA,UAAC,KAAD,YACE,SAAC,KAAD,uBACA,SAAC,KAAD,CAAQrB,KAAK,QAAQsB,KAAK,cAE5B,UAAC,KAAD,YACE,SAAC,KAAD,yBACA,SAAC,KAAD,CAAQtB,KAAK,WAAWsB,KAAK,iBAE/B,SAACC,EAAA,EAAD,CAAQxB,MAAM,SAASC,KAAK,aAGjC,EC/BD,EAFkB,kBAAM,SAAC,EAAD,GAAN,C","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ButtonStyled = styled.button`\nmargin: 15px auto ;\n    padding:10px;\n    width: 150px;\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 1.25;\n  background-color: skyblue;\n  border:none;\n  border-radius: 10px;\n  cursor: pointer;\n  &:hover {\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ButtonStyled } from './Button.styled'; \n\nconst Button = ({title, type='button', onClick }) => { return (\n  <ButtonStyled className=\"btn\" type={type} onClick={onClick}>\n    {title}\n  </ButtonStyled>\n);}\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;","import styled from 'styled-components';\n\nexport const Form = styled.form`\ndisplay: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.title`\nfont-size: 24px;\n    text-align: center;\n`;\n\nexport const FormLabel = styled.label`\ndisplay: flex;\n    justify-content: space-between;\n`;\n\nexport const LabelTitle = styled.span`\nfont-size: 24px;\n    white-space: nowrap;\n    margin-right: 20px;\n`;\n\nexport const Input = styled.input`\nheight: 35px;\n    width: 70%;\n    border: 2px solid lightgray;\n    border-radius: 6px;\n    font-size: 18px;\n    font-weight: 500;\n`","import { useDispatch } from \"react-redux\";\nimport { logIn } from '../../redux/auth/authOperations';\n\nimport { Form, Title, FormLabel, LabelTitle, Input } from \"./LoginForm.styled\"; \nimport Button from \"components/Button/Button\";\n\nconst LoginForm = () => {\n\tconst dispatch = useDispatch();\n\n\tconst handleSubmit = evt => {\n\t\tevt.preventDefault();\n\t\tconst form = evt.currentTarget;\n\t\tdispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n\t\t);\n\t\tform.reset();\n\t}\n\n\treturn (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Title >Please log in</Title>\n      <FormLabel >\n        <LabelTitle>E-mail:</LabelTitle>\n        <Input  type=\"email\" name=\"email\" />\n      </FormLabel>\n      <FormLabel>\n        <LabelTitle>Password:</LabelTitle>\n        <Input  type=\"password\" name=\"password\" />\n      </FormLabel>\n      <Button title=\"Log in\" type=\"submit\" />\n    </Form>\n  );\n};\n\nexport default LoginForm;","import LoginForm from \"components/LoginForm/LoginForm\";\n\nconst LoginPage = () => <LoginForm />;\n\nexport default LoginPage;"],"names":["ButtonStyled","styled","title","type","onClick","className","Form","Title","FormLabel","LabelTitle","Input","dispatch","useDispatch","onSubmit","evt","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","autoComplete","name","Button"],"sourceRoot":""}